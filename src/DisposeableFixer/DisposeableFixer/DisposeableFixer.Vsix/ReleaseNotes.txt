Release 0.26
* Issue 34 & 49: Added support for extension methods that are tracking calls like AddTo from Reactive.Bindings.Extensions.IDisposableExtensions.

Release 0.25
* Fixed issue 48: Null-conditional operator now correctly detects Dispose calls on MethodInvocations and fields, too.

Release 0.24
* Fixed issue 47: Removed unnecessary dependency to Microsoft.VisualStudio.Shell.12.0

Release 0.23
* Fixed issue 43: Disposable directly returned in Funcs no longer yield an error.
* Fixed issue 44: Disposables that are disposed within Funcs and Actions no longer yield an error.
* Fixed issue 45: Scope of disposable is now determined correctly.

Release 0.22
* Fixed issue 39: If variable/field assignment of IDisposables is splitted, this is now correctly analysed.
* Fixed issue 40: If an disposable is created and disposed in one step (e.g. (new MemoryStream).Dispose()), this is now correctly analysed.

Release 0.21
* Fixed issue 33: Dispose via Null-conditional operator is now recognized correctly.
* Fixed issue 37: await within using statements are now recognized correctly.
* Fixed issue 38: Microsoft.Extensions.Logging.ILoggerFactory is now an ignored interface.

Release 0.20
* Fixed issue 31: If using await on IDisposables, these are now correct recognized.

Release 0.18
* Fixed issue 26: Anonymous objects that are not disposed are not marked as not disposed.
* Fixed issue 30: Support for VS 2017 Community Edition, Professional and Enterprise.

Release 0.17
* Fixed issue 27: Disposables within a using Block are now correctly marked as not disposed.
+ Closed issue 29: Disposing CancellationTokenRegistration should be part of your cleanup.

Release 0.15
* Fixed issue 25: Problem if InvokationExpression called on ObjectCreation returns an IDisposable was fixed.

Release 0.15
* Fixed issue 24: Disposables stored in local variables are no longer marked when returned.

Release 0.14
* Fixed issue 23: Disposables stored in local variables are no longer marked when given to tracking types.

Release 0.13
* Fixed issue 22: All tracking instances from mscorlib are correctly identified, now.

Release 0.12
* Fixed issue 17: ObjectCreations that assign an IDisposable to a field, not get correctly marked as undisposed.
* Fixed issue 18: Defined more descriptive error messages.

Release 0.11
* Fixed issue 14: Task and IEnumerator`1 are now ignored during analysis.

Release 0.10
* Fixed issue 12: InvokationExpression that returned an IDisposable yield a diagnostic.
* Fixed issue 13: If the return value of an InvokationExpression was stored within a local variable, or field or property and got disposed, is yielded a diagnostic.

Release 0.9 
* Fix issue 11: InvokationExpression where SymbolType could not be determined yield an false positive.

Release 0.8
* Fix issue 10: Calls to methods that return IDisposable don't got detected.
* Fix issue 9: Code fix (from template) is no longer offered while pressing Ctrl+.