<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B79E0F2C-C5BF-4365-A240-059F16F628CB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>DisposableFixer.Test</RootNamespace>
    <AssemblyName>DisposableFixer.Test</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework">
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DisposeableFixerAnalyzerSpecs\Async\If_Analyser_runs_on_class_await_returned_later.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Async\If_Analyser_runs_on_class_await_in_using.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Async\If_Analyser_runs_on_class_that_uses_await_in_return_statement.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Async\If_Analyser_runs_on_class_that_assigns_result_of_await_in_using.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Async\If_Analyser_runs_on_class_that_opens_a_filestream_async_using_configure_await.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Async\If_Analyser_runs_on_class_that_opens_a_filestream_async.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\DisposeableFixerAnalyzerSpec.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\DisposeOutSideOfDisposeMethod\If_Analsyser_runs_on_field_dispose_in_method_decorected_with_attribute_named_TearDown.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\DisposeOutSideOfDisposeMethod\If_Analsyser_runs_on_field_dispose_in_method_called_Cleanup.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ExtensionMethods\If_Analyser_runs_on_class_that_has_a_using_block_in_its_ctor_that_is_not_used_for_the_MemoryStream.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ExtensionMethods\If_Analyser_runs_on_ObjectCreation_that_is_part_of_method_chain_with_nontracking_extension_method.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_MethodInvokation_in_ParenthesizedLambdaExpression.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_ObjectCreation_assigned_to_lokal_variable_that_is_returned_later_in_Func.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_MethodInvokation_assigned_to_lokal_variable_that_is_returned_later_in_Func.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_ObjectCreation_in_ParenthesizedLambdaExpression.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_MethodInvokation_in_SimpleLambdaExpression.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_ObjectCreation_in_UsingExpression_in_ParenthesizedLambdaExpression.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_ObjectCreation_in_UsingExpression_in_SimpleLambdaExpression.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_ObjectCreation_in_VariableDeclaration_in_UsingExpression_in_SimpleLambdaExpression.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_ObjectCreation_in_VariableDeclaration_in_UsingExpression_in_ParenthesizedLambdaExpression.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\FuncAndActions\If_analyser_runs_on_an_ObjectCreation_in_SimpleLambdaExpression.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_that_has_a_using_block_in_its_ctor_that_is_not_used_for_the_MemoryStream.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_that_has_a_using_block_in_its_method_that_is_not_used_for_the_MemoryStream.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_that_uses_a_MemoryStream_within_an_using_block_within_a_Ctor.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_that_uses_a_MemoryStream_within_an_using_block_within_a_method.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_that_uses_a_MemoryStream_within_an_using_block_within_a_method2.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_that_uses_IDisposableFactory_in_Ctor.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_that_uses_MemoryStreamFactory_used_within_an_using.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_that_uses_MemoryStreamFactory_in_Ctor.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_field_disposed_in_DisposeMethod.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_field_of_type_IDisposable_that_is_initialized_in_a_method_but_never_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_field_of_type_MemoryStream_that_is_initialized_in_a_method_but_never_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_field_of_type_MemoryStream_that_is_initialized_in_Ctor_but_never_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_local_initialized_MemoryStream_field_that_is_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_local_initialized_MemoryStream_IDisposable_field_that_is_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_local_initialized_MemoryStream_in_Ctor_Variable_that_is_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_MemoryStream_as_field_initialized_in_ctor_that_is_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_a_MemoryStream_that_is_neither_field_nor_LocalAssignment_that_is_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_no_Disposables.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_that_declares_a_MemoryStream_within_an_using_block.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_class_with_two_methods_each_containing_an_disposable_instance_with_the_same_name_but_only_one_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_document_with_two_classes_each_containing_an_disposable_instance_with_the_same_name_but_only_one_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_Invokation_that_is_part_of_a_return_statement_that_returns_an_IDisposable.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_MethodInvokation_that_returns_a_MemoryStream_stored_in_a_field_that_gets_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_MethodInvokation_that_returns_a_MemoryStream_stored_in_a_local_Variable_that_gets_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_MethodInvokation_that_returns_a_MemoryStream_stored_in_a_Property_that_gets_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\If_Analyser_runs_on_method_that_returns_a_MemoryStream.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Ignored\If_Analyser_runs_on_an_Enumerator_that_should_be_ignored.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Ignored\If_Analyser_runs_on_an_Task_that_should_be_ignored.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Ignored\If_Analyser_runs_on_field_that_is_assigned_via_ignored_static_method_call.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_Analyser_runs_MethodInvocation_that_is_part_of_auto_property.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_Analyser_runs_MethodInvocation_that_is_part_of_auto_property_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_Analyser_runs_MethodInvocation_that_is_part_of_expression_body_of_a_property.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_Analyser_runs_MethodInvocation_that_is_part_of_expression_body_of_a_property_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_Analyser_runs_MethodInvocation_that_is_part_of_property.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_Analyser_runs_MethodInvocation_that_is_part_of_property_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_analyser_runs_on_an_disposable_created_by_factory_method_but_is_not_stored.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_analyser_runs_on_an_disposable_local_variable_created_by_factory_method.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_analyser_runs_on_an_method_invokation_that_assign_disposable_to_a_property.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_analyser_runs_on_an_method_invokation_that_assign_disposable_to_a_field.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_analyser_runs_on_an_method_invokation_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\InvokationExpression\If_analyser_runs_on_an_method_invokation_that_assign_disposable_to_a_local_variable_declared_earlier.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\LocalDeclaration\If_Analyser_runs_on_a_local_declared_variable_that_gets_disposed_via_null_conditional_operator.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\LocalDeclaration\If_Analyser_runs_on_a_local_declared_variable_that_gets_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\LocalDeclaration\If_Analyser_runs_on_a_local_declared_variable_that_gets_returned.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\LocalDeclaration\If_Analyser_runs_on_a_local_declared_variable_that_gets_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\NullConditionalOperator\If_Analyser_runs_on_method_invocation_disposed_via_null_conditional_operator.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\NullConditionalOperator\If_Analyser_runs_on_field_disposed_via_null_conditional_operator.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\NullConditionalOperator\If_Analyser_runs_on_a_local_variable_disposed_via_null_conditional_operator.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_that_is_part_of_property_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_that_is_part_of_property.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_that_is_part_of_auto_property_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_that_is_part_of_auto_property.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_that_is_part_of_expression_body_of_a_property.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_assigned_to_a_property.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_assigned_to_a_local_variable_already_declared.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_assigned_to_a_field.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_Analyser_runs_ObjectCreation_that_is_part_of_expression_body_of_a_property_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\ObjectCreations\If_analyser_runs_on_an_disposable_local_variable_created_by_factory_method.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_a_stream_delivered_by_a_factory_is_stored_local_and_given_to_ctor_of_tracking_class_that_id_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_a_stream_is_created_and_stored_local_and_given_to_ctor_of_tracking_class_that_is_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_a_stream_is_created_and_stored_local_and_given_to_ctor_of_tracking_class_within_using.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_a_stream_delivered_by_a_factory_is_stored_local_and_given_to_ctor_of_tracking_class_within_using.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_created_nearby_CtorCall_of_Tracking_instances_that_is_not_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_created_nearby_CtorCall_of_Tracking_instances_that_is_disposed.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_running_on_Tracking_instaces_with_optout.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_created_in_CtorCall_of_Tracking_instances.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_disposables_is_given_in_ctor_to_an_class_that_tracks_disposables.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\If_disposables_is_given_in_ctor_to_an_class_that_doesnt_track_disposables.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\TrackingClasses\If_running_on_Tracking_instaces.cs" />
    <Compile Include="DisposeableFixerAnalyzerSpecs\Using\If_disposables_is_using_within_using.cs" />
    <Compile Include="Dummy.cs" />
    <Compile Include="Extensions\ClassDeclarationSyntaxExtensionsSpecs\If_FindFieldNamed_is_called_with_class_that_contains_no_fields.cs" />
    <Compile Include="Extensions\ClassDeclarationSyntaxExtensionsSpecs\If_FindFieldNamed_is_called_with_class_that_contains_searched_field.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_ContainsUsingsOfVariableNamed_is_called_on_Class_without_using.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_ContainsUsingsOfVariableNamed_is_called_on_Class_with_using_statement_for_another_disposable.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_ContainsUsingsOfVariableNamed_is_called_on_Class_with_using_statement_for_searched_disposable.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_ContainsUsingsOfVariableNamed_is_called_on_Class_with_using_statement_for_searched_disposable2.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_FindContainingClass_is_called_on_NamespaceDeclaration.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_FindContainingClass_is_called_on_ClassDeclaration_of_a_private_Class.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_FindContainingClass_is_called_on_ClassDeclaration_that_is_no_private_class.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_FindContainingClass_is_called_on_ConstructorDeclaration.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_FindContainingClass_is_called_on_FieldDeclaration.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_FindContainingClass_is_called_on_FieldDeclaration_of_a_private_Class.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_FindContainingClass_is_called_on_MethodDeclaration.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\If_FindContainingClass_is_called_on_PropertyDeclaration.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\Search_For_Descendant_Nodes_Of_Type_MethodDeclarationSyntax_Specs.cs" />
    <Compile Include="Extensions\SyntaxNodeExtensionsSpecs\Search_For_Descendant_Nodes_Of_Type_PropertyDeclarationSyntax_Specs.cs" />
    <Compile Include="Extensions\VariableDeclaratorSyntaxExtensionsSpecs\If_FindContainingConstructor_is_called_on_VariableDeclaration_in_Ctor.cs" />
    <Compile Include="Extensions\VariableDeclaratorSyntaxExtensionsSpecs\If_FindContainingMethods_is_called_on_VariableDeclaration_in_Ctor.cs" />
    <Compile Include="Extensions\VariableDeclaratorSyntaxExtensionsSpecs\If_FindMethod_is_called_on_VariableDeclaration_in_Ctor.cs" />
    <Compile Include="Extensions\VariableDeclaratorSyntaxExtensionsSpecs\If_FindContainingMethods_is_called_on_VariableDeclaration_in_Method.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_11.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_26.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_27.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_33.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_41.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_50.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_58.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_60.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_59.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_56.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_55.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_54.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_53.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_52.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_51.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_48.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_45.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_44.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_43.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_40.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_39.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_37.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_31.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_29.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_25.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_24.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_23.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_17.cs" />
    <Compile Include="IssueTests\If_Analyser_runs_on_code_from_issue_12.cs" />
    <Compile Include="IssueTests\IssueSpec.cs" />
    <Compile Include="MyHelper.cs" />
    <Compile Include="Spec.cs" />
    <Compile Include="Verifiers\CodeFixVerifier.cs" />
    <Compile Include="Verifiers\DiagnosticVerifier.cs" />
    <Compile Include="Helpers\CodeFixVerifier.Helper.cs" />
    <Compile Include="Helpers\DiagnosticResult.cs" />
    <Compile Include="Helpers\DiagnosticVerifier.Helper.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DisposeableFixerAnalyzerSpecs\Tracked\TrackingClasses\If_running_on_Tracking_instaces.CompositeDisposable.cs" />
    <None Include="paket.references" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Import Project="..\..\..\..\.paket\paket.targets" />
  <ItemGroup>
    <ProjectReference Include="..\DisposableFixer\DisposableFixer.csproj">
      <Project>{fbc1261a-4dc1-48cc-a519-b9416e42e37c}</Project>
      <Name>DisposableFixer</Name>
    </ProjectReference>
  </ItemGroup>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="FakeItEasy">
          <HintPath>..\..\..\..\packages\FakeItEasy\lib\net40\FakeItEasy.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="FluentAssertions">
          <HintPath>..\..\..\..\packages\FluentAssertions\lib\net45\FluentAssertions.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="FluentAssertions.Core">
          <HintPath>..\..\..\..\packages\FluentAssertions\lib\net45\FluentAssertions.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="dotMemory.Unit">
          <HintPath>..\..\..\..\packages\JetBrains.DotMemoryUnit\Lib\dotMemory.Unit.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <ItemGroup>
    <Analyzer Include="..\..\..\..\packages\Microsoft.CodeAnalysis.Analyzers\analyzers\dotnet\cs\Microsoft.CodeAnalysis.Analyzers.dll">
      <Paket>True</Paket>
    </Analyzer>
    <Analyzer Include="..\..\..\..\packages\Microsoft.CodeAnalysis.Analyzers\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.Analyzers.dll">
      <Paket>True</Paket>
    </Analyzer>
  </ItemGroup>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.Common\lib\net45\Microsoft.CodeAnalysis.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore') Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v1.2' Or $(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4' Or $(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v2.3' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.1' Or $(TargetFrameworkVersion) == 'v4.2' Or $(TargetFrameworkVersion) == 'v4.3' Or $(TargetFrameworkVersion) == 'v4.4' Or $(TargetFrameworkVersion) == 'v5.0' Or $(TargetFrameworkVersion) == 'v5.1' Or $(TargetFrameworkVersion) == 'v6.0' Or $(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.tvOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.watchOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile44')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.Common\lib\portable-net45+win8\Microsoft.CodeAnalysis.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis.CSharp">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.CSharp\lib\net45\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore') Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v1.2' Or $(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4' Or $(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v2.3' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.1' Or $(TargetFrameworkVersion) == 'v4.2' Or $(TargetFrameworkVersion) == 'v4.3' Or $(TargetFrameworkVersion) == 'v4.4' Or $(TargetFrameworkVersion) == 'v5.0' Or $(TargetFrameworkVersion) == 'v5.1' Or $(TargetFrameworkVersion) == 'v6.0' Or $(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.tvOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.watchOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile44')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis.CSharp">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.CSharp\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces\lib\net45\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore') Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v1.2' Or $(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4' Or $(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v2.3' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.1' Or $(TargetFrameworkVersion) == 'v4.2' Or $(TargetFrameworkVersion) == 'v4.3' Or $(TargetFrameworkVersion) == 'v4.4' Or $(TargetFrameworkVersion) == 'v5.0' Or $(TargetFrameworkVersion) == 'v5.1' Or $(TargetFrameworkVersion) == 'v6.0' Or $(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.tvOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.watchOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile44')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis.VisualBasic">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.VisualBasic\lib\net45\Microsoft.CodeAnalysis.VisualBasic.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis.VisualBasic.Workspaces">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.VisualBasic.Workspaces\lib\net45\Microsoft.CodeAnalysis.VisualBasic.Workspaces.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis.Workspaces">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.Workspaces.Common\lib\net45\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="Microsoft.CodeAnalysis.Workspaces.Desktop">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.Workspaces.Common\lib\net45\Microsoft.CodeAnalysis.Workspaces.Desktop.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore') Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v1.2' Or $(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4' Or $(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v2.3' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.1' Or $(TargetFrameworkVersion) == 'v4.2' Or $(TargetFrameworkVersion) == 'v4.3' Or $(TargetFrameworkVersion) == 'v4.4' Or $(TargetFrameworkVersion) == 'v5.0' Or $(TargetFrameworkVersion) == 'v5.1' Or $(TargetFrameworkVersion) == 'v6.0' Or $(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.tvOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.watchOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile44')">
      <ItemGroup>
        <Reference Include="Microsoft.CodeAnalysis.Workspaces">
          <HintPath>..\..\..\..\packages\Microsoft.CodeAnalysis.Workspaces.Common\lib\portable-net45+win8\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore') Or ($(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')) Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v1.2' Or $(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4' Or $(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v2.3' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.1' Or $(TargetFrameworkVersion) == 'v4.2' Or $(TargetFrameworkVersion) == 'v4.3' Or $(TargetFrameworkVersion) == 'v4.4' Or $(TargetFrameworkVersion) == 'v5.0' Or $(TargetFrameworkVersion) == 'v5.1' Or $(TargetFrameworkVersion) == 'v6.0' Or $(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.tvOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.watchOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkIdentifier) == 'WindowsPhone' And ($(TargetFrameworkVersion) == 'v8.0' Or $(TargetFrameworkVersion) == 'v8.1')) Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile31') Or ($(TargetFrameworkProfile) == 'Profile32') Or ($(TargetFrameworkProfile) == 'Profile44') Or ($(TargetFrameworkProfile) == 'Profile49') Or ($(TargetFrameworkProfile) == 'Profile78') Or ($(TargetFrameworkProfile) == 'Profile84') Or ($(TargetFrameworkProfile) == 'Profile111') Or ($(TargetFrameworkProfile) == 'Profile151') Or ($(TargetFrameworkProfile) == 'Profile157') Or ($(TargetFrameworkProfile) == 'Profile259')">
      <ItemGroup>
        <Reference Include="System.Composition.AttributedModel">
          <HintPath>..\..\..\..\packages\Microsoft.Composition\lib\portable-net45+win8+wp8+wpa81\System.Composition.AttributedModel.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="System.Composition.Convention">
          <HintPath>..\..\..\..\packages\Microsoft.Composition\lib\portable-net45+win8+wp8+wpa81\System.Composition.Convention.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="System.Composition.Hosting">
          <HintPath>..\..\..\..\packages\Microsoft.Composition\lib\portable-net45+win8+wp8+wpa81\System.Composition.Hosting.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="System.Composition.Runtime">
          <HintPath>..\..\..\..\packages\Microsoft.Composition\lib\portable-net45+win8+wp8+wpa81\System.Composition.Runtime.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="System.Composition.TypedParts">
          <HintPath>..\..\..\..\packages\Microsoft.Composition\lib\portable-net45+win8+wp8+wpa81\System.Composition.TypedParts.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="nunit.framework">
          <HintPath>..\..\..\..\packages\NUnit\lib\nunit.framework.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore') Or ($(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')) Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v1.2' Or $(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4' Or $(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v2.3' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.1' Or $(TargetFrameworkVersion) == 'v4.2' Or $(TargetFrameworkVersion) == 'v4.3' Or $(TargetFrameworkVersion) == 'v4.4' Or $(TargetFrameworkVersion) == 'v5.0' Or $(TargetFrameworkVersion) == 'v5.1' Or $(TargetFrameworkVersion) == 'v6.0' Or $(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.tvOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.watchOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkIdentifier) == 'WindowsPhone' And ($(TargetFrameworkVersion) == 'v8.0' Or $(TargetFrameworkVersion) == 'v8.1')) Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile31') Or ($(TargetFrameworkProfile) == 'Profile32') Or ($(TargetFrameworkProfile) == 'Profile44') Or ($(TargetFrameworkProfile) == 'Profile49') Or ($(TargetFrameworkProfile) == 'Profile78') Or ($(TargetFrameworkProfile) == 'Profile84') Or ($(TargetFrameworkProfile) == 'Profile111') Or ($(TargetFrameworkProfile) == 'Profile151') Or ($(TargetFrameworkProfile) == 'Profile157') Or ($(TargetFrameworkProfile) == 'Profile259')">
      <ItemGroup>
        <Reference Include="System.Collections.Immutable">
          <HintPath>..\..\..\..\packages\System.Collections.Immutable\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore') Or ($(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')) Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v1.2' Or $(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4' Or $(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v2.3' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.1' Or $(TargetFrameworkVersion) == 'v4.2' Or $(TargetFrameworkVersion) == 'v4.3' Or $(TargetFrameworkVersion) == 'v4.4' Or $(TargetFrameworkVersion) == 'v5.0' Or $(TargetFrameworkVersion) == 'v5.1' Or $(TargetFrameworkVersion) == 'v6.0' Or $(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.tvOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.watchOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile44')">
      <ItemGroup>
        <Reference Include="System.Reflection.Metadata">
          <HintPath>..\..\..\..\packages\System.Reflection.Metadata\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
</Project>